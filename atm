import java.util.*;
public class ATM_Interface
{
      String Username;
      String Password;
      String Name;
      String Acc_No;
      float Balance=0;
      int No_Of_Transactions=0;
      String TransactionHistory="";
      public void createAccount() 
      {
         Scanner in=new Scanner(System.in);
         System.out.println("Enter your name: ");
         this.Name=in.nextLine();
         System.out.println("Enter Account Number: ");
         this.Acc_No=in.nextLine();
         System.out.println("Enter your Username:");
         this.Username=in.nextLine();
         System.out.println("Enter Password");
         this.Password=in.nextLine();
         System.out.println();
         System.out.println("Your registration is successfully completed");
      }
     public void login() 
     {
        boolean flag=true;
        Scanner in = new Scanner(System.in);
        while(flag)
      {
        System.out.println("Enter your Username :");
        String Username=in.nextLine();
        if(Username.equals(Username)) 
        {
           System.out.println("Enter password");
           String Password=in.nextLine();
            if(Password.equals(Password)) 
            {
              System.out.println("Login successful");
              flag=false;
            }
            else
               System.out.println("Password doesn't match, Please try again ");
        }
        else
         {
            System.out.println("\n Username Not Found");
        }
    }
  }
public void deposit()
{
    System.out.println("Enter amount to deposit,amount should be greater than zero:");
    Scanner in = new Scanner(System.in);
    float amount=in.nextFloat();
    Balance=Balance+amount;
    System.out.println("Amount "+amount+" has been deposited");
    No_Of_Transactions++;
    String transaction = amount+" has been credited to your account\n";
     TransactionHistory = TransactionHistory.concat(transaction);
}
public void withdraw() 
{
    System.out.println("Enter amount to withdraw ");
    Scanner in = new Scanner(System.in);
    float amount=in.nextFloat();
    if(Balance>=amount)
   {
    Balance =Balance-amount;
    System.out.println(amount +" Withdrawl successful");
    No_Of_Transactions++;
    String transaction = amount+" has been successfully withdrawn\n";
    TransactionHistory = TransactionHistory.concat(transaction);
   }
   else
     System.out.println("Insufficient Balance ");
}
public void transfer() 
{
     Scanner in = new Scanner(System.in);
     System.out.println("\nEnter Receiver's Name : ");
    String receiver=in.nextLine();
    System.out.println("\nEnter Amount to transfer : ");
    float amount = in.nextFloat();
     if(amount<=Balance) 
     {
        Balance = Balance-amount;
        System.out.println(amount+" successfully transferred ");
        No_Of_Transactions++;
        String transaction = amount+" transferred to "+receiver+"\n";
        TransactionHistory = TransactionHistory.concat(transaction);
     }
}
 public void balanceEnquiry() 
{
         System.out.println("Your account balance is "+Balance);
}
 public void transactionHistory() 
 {
        System.out.println("\n"+TransactionHistory);
   }
  public static void main(String[] args)
   {
    Scanner in = new Scanner(System.in);
    System.out.println(" *******WELCOME TO ATM INTERFACE******\n\n");
    System.out.println(" Enter 1 to Create account\n 0 to exit\n");
    System.out.println("Enter your preference");
    int input=in.nextInt();
    if(input==1) 
    {
        ATM_Interface user = new ATM_Interface();
        user.createAccount();
        System.out.println("\nplease enter atm details to login\n");
        user.login();
        boolean exit=false;
        while(!exit)
         {
            System.out.println("\n1.Deposit \n2.Withdraw \n3.Trasfer \n4.Check_Balance \n5.Check_Transactions \n6.Exit\n");
            System.out.println("Enter your choice");
            int choice = in.nextInt();
            if(choice<7 && choice>0) 
            {
                switch(choice) 
                {
                    case 1:user.deposit();
                    break;
                    case 2:user.withdraw();
                    break;
                    case 3:user.transfer();
                    break;
                    case 4:user.balanceEnquiry();
                    break;
                    case 5:user.transactionHistory();
                    break;
                    case 6:exit=true;
                    break;
                }
            }
        }  
    }
  }
}


